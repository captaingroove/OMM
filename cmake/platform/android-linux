set(CMAKE_SYSTEM_NAME Generic)
set(CMAKE_SYSTEM_PROCESSOR arm-linux-androideabi)
set_property(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS FALSE)

#set(SDKVER "5.0")
#set(XCHAIN_ROOT $ENV{XCHAIN_ROOT})
set(XCHAIN_ROOT "/home/jb/app/xchain")
set(SDKROOT "${XCHAIN_ROOT}/cc/android/")
set(TARGET_TRIPLE "arm-linux-androideabi")

#find_program(CMAKE_AR NAMES ${TARGET_TRIPLE}-ar)
#find_program(CMAKE_RANLIB NAMES ${TARGET_TRIPLE}-ranlib)
set(CMAKE_C_COMPILER "${CMAKE_SYSTEM_PROCESSOR}-gcc")
set(CMAKE_CXX_COMPILER "${CMAKE_SYSTEM_PROCESSOR}-g++")
add_definitions(-DPOCO_ANDROID)

#set(CMAKE_C_FLAGS "-target ${TARGET_TRIPLE} -arch armv7 --sysroot ${SDKROOT} -isysroot ${SDKROOT} -g0 -O2 -miphoneos-version-min=${SDKVER} -mlinker-version=134.9 -objc-arc -fblocks" CACHE STRING "additional cross compiling c flags" FORCE)
#set(CMAKE_CXX_FLAGS "-target ${TARGET_TRIPLE} -arch armv7 --sysroot ${SDKROOT} -isysroot ${SDKROOT} -g0 -O2 -miphoneos-version-min=${SDKVER} -mlinker-version=134.9 -objc-arc -fblocks" CACHE STRING "additional cross compiling cxx flags" FORCE)

set(CMAKE_FIND_ROOT_PATH "${SDKROOT}" "${CMAKE_INSTALL_PREFIX}")
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM BOTH)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
